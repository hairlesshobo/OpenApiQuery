root = true

[*]
charset                  = utf-8
end_of_line              = crlf
indent_style             = space
indent_size              = 4
trim_trailing_whitespace = true
insert_final_newline     = true
max_line_length          = 120

[*.cs]

# Microsoft .NET properties
csharp_preferred_modifier_order=public, private, protected, internal, new, abstract, virtual, sealed, override, static, readonly, extern, unsafe, volatile, async:suggestion
csharp_style_var_elsewhere                                               = true : suggestion
csharp_style_var_for_built_in_types                                      = true : suggestion
csharp_style_var_when_type_is_apparent                                   = true : suggestion
dotnet_style_predefined_type_for_locals_parameters_members               = true : warning
dotnet_style_predefined_type_for_member_access                           = true : warning
dotnet_style_qualification_for_field                                     = false : warning
dotnet_style_qualification_for_property                                  = false : warning
dotnet_style_qualification_for_method                                    = false : warning
dotnet_style_qualification_for_event                                     = false : warning
dotnet_style_readonly_field                                              = true : suggestion
dotnet_style_require_accessibility_modifiers                             = always : warning
dotnet_style_parentheses_in_arithmetic_binary_operators                  = always_for_clarity : suggestion
dotnet_style_parentheses_in_other_binary_operators                       = always_for_clarity : suggestion
dotnet_style_parentheses_in_other_operators                              = never_if_unnecessary : suggestion
dotnet_style_object_initializer                                          = true : suggestion
dotnet_style_collection_initializer                                      = true : suggestion
dotnet_style_explicit_tuple_names                                        = true : suggestion
dotnet_style_prefer_inferred_tuple_names                                 = false : suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names                 = false : suggestion
dotnet_style_prefer_auto_properties                                      = true : suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method         = true : suggestion
dotnet_style_prefer_conditional_expression_over_assignment               = true : suggestion
dotnet_style_prefer_conditional_expression_over_return                   = true : suggestion
dotnet_style_coalesce_expression                                         = true : suggestion
dotnet_style_null_propagation                                            = true : suggestion

csharp_style_expression_bodied_methods                                   = false : suggestion
csharp_style_expression_bodied_constructors                              = false : suggestion
csharp_style_expression_bodied_operators                                 = false : suggestion
csharp_style_expression_bodied_properties                                = when_on_single_line : suggestion
csharp_style_expression_bodied_indexers                                  = when_on_single_line : suggestion
csharp_style_expression_bodied_accessors                                 = when_on_single_line : suggestion

csharp_style_pattern_matching_over_is_with_cast_check                    = true : suggestion
csharp_style_pattern_matching_over_as_with_null_check                    = true : suggestion
csharp_style_inlined_variable_declaration                                = true : suggestion

csharp_prefer_simple_default_expression                                  = true : suggestion
#csharp_style_deconstructed_variable_declaration
csharp_style_pattern_local_over_anonymous_function                       = true : suggestion

csharp_style_throw_expression                                            = false : suggestion
csharp_style_conditional_delegate_call                                   = true : suggestion

csharp_prefer_braces                                                     = true : warning

# Formatting conventions
dotnet_sort_system_directives_first                                      = true

csharp_new_line_before_open_brace                                        = all
csharp_new_line_before_else                                              = true
csharp_new_line_before_catch                                             = true
csharp_new_line_before_finally                                           = true
csharp_new_line_before_members_in_object_initializers                    = true
csharp_new_line_before_members_in_anonymous_types                        = true
csharp_new_line_between_query_expression_clauses                         = true

csharp_indent_case_contents                                              = true
csharp_indent_switch_labels                                              = true
csharp_indent_labels                                                     = flush_left

csharp_space_after_cast                                                  = false
csharp_space_after_keywords_in_control_flow_statements                   = true
csharp_space_between_method_declaration_parameter_list_parentheses       = false
csharp_space_between_method_call_parameter_list_parentheses              = false
csharp_space_between_parentheses                                         = false
csharp_space_before_colon_in_inheritance_clause                          = true
csharp_space_after_colon_in_inheritance_clause                           = true
csharp_space_around_binary_operators                                     = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis            = false
csharp_space_between_method_call_empty_parameter_list_parentheses        = false
csharp_space_within_single_line_array_initializer_braces                 = true

csharp_preserve_single_line_statements                                   = false
csharp_preserve_single_line_blocks                                       = true


# ReSharper properties
resharper_autodetect_indent_settings=true
resharper_braces_for_for=required
resharper_braces_for_foreach=required
resharper_braces_for_ifelse=required
resharper_braces_for_while=required
resharper_csharp_wrap_arguments_style=chop_if_long
resharper_csharp_wrap_parameters_style=chop_if_long
resharper_html_attribute_style=first_attribute_on_single_line
resharper_keep_existing_expr_member_arrangement=false
resharper_keep_existing_initializer_arrangement=false
resharper_max_enum_members_on_line=1
resharper_max_initializer_elements_on_line=1
resharper_normalize_tag_names=true
resharper_no_indent_inside_elements=html,thead,tbody,tfoot
resharper_place_accessorholder_attribute_on_same_line=False
resharper_place_simple_anonymousmethod_on_single_line=false
resharper_place_simple_initializer_on_single_line=false
resharper_use_indent_from_vs=false
resharper_wrap_after_declaration_lpar=true
resharper_wrap_before_first_type_parameter_constraint=true
resharper_wrap_object_and_collection_initializer_style=chop_always

# ReSharper inspection severities
resharper_arguments_style_anonymous_function_highlighting=none
resharper_arguments_style_literal_highlighting=none
resharper_arguments_style_named_expression_highlighting=none
resharper_arguments_style_other_highlighting=none
resharper_arguments_style_string_literal_highlighting=none
resharper_comment_typo_highlighting=none
resharper_identifier_typo_highlighting=none
resharper_localizable_element_highlighting=none
resharper_markup_attribute_typo_highlighting=none
resharper_markup_text_typo_highlighting=none
resharper_non_readonly_member_in_get_hash_code_highlighting=none
resharper_parameter_only_used_for_precondition_check_local_highlighting=none
resharper_partial_method_with_single_part_highlighting=none
resharper_partial_type_with_single_part_highlighting=none
resharper_redundant_anonymous_type_property_name_highlighting=none
resharper_redundant_argument_default_value_highlighting=none
resharper_redundant_attribute_usage_property_highlighting=none
resharper_redundant_case_label_highlighting=none
resharper_string_literal_typo_highlighting=none
resharper_switch_statement_missing_some_cases_highlighting=none
resharper_unused_member_global_highlighting=none
resharper_web_config_module_not_resolved_highlighting=warning
resharper_web_config_type_not_resolved_highlighting=warning
resharper_web_config_wrong_module_highlighting=warning

# .NET naming conventions

# Mostly adapted from Roslyn

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static readonly fields are PascalCase without prefix
dotnet_naming_rule.static_readonly_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_readonly_fields_should_be_camel_case.symbols = static_readonly_fields
dotnet_naming_rule.static_readonly_fields_should_be_camel_case.style = static_readonly_field_style

dotnet_naming_symbols.static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.static_readonly_fields.required_modifiers = static, readonly

dotnet_naming_style.static_readonly_field_style.capitalization = pascal_case

# Static fields are camelCase and start with _
dotnet_naming_rule.static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = _

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case


# Async methods must end with 'Async'
dotnet_naming_rule.async_methods_must_end_with_async.severity = warning
dotnet_naming_rule.async_methods_must_end_with_async.symbols  = method_symbols
dotnet_naming_rule.async_methods_must_end_with_async.style    = end_in_async_style

dotnet_naming_symbols.method_symbols.applicable_kinds   = method
dotnet_naming_symbols.method_symbols.required_modifiers = async

dotnet_naming_style.end_in_async_style.capitalization  = pascal_case
dotnet_naming_style.end_in_async_style.required_suffix = Async

# Interfaces are PascalCase and start with I
dotnet_naming_rule.interfaces_should_be_prefixed_pascal_case.severity = suggestion
dotnet_naming_rule.interfaces_should_be_prefixed_pascal_case.symbols = interface
dotnet_naming_rule.interfaces_should_be_prefixed_pascal_case.style = interface_style

dotnet_naming_symbols.interface.applicable_kinds = interface

dotnet_naming_style.interface_style.capitalization = pascal_case
dotnet_naming_style.interface_style.required_prefix = I

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case
